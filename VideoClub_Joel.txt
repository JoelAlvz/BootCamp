
--1. 
	SELECT * FROM movies;


--2. 	
	SELECT * FROM genres;


--3. 	
	SELECT * FROM studios WHERE studio_active = 1;


--4. 	
	SELECT * FROM MEMBERS ORDER BY MEMBER_DISCHARGE_DATE DESC LIMIT 20;


--5. 	
	SELECT MOVIE_DURATION, COUNT(*) MOVIE_DURATION  
	FROM MOVIES GROUP BY MOVIE_DURATION 
	ORDER BY MOVIE_DURATION DESC LIMIT 20;


--6. 	
	SELECT * FROM MOVIES 
	WHERE MOVIE_LAUNCH_DATE >= '2000-01-01' AND MOVIE_NAME LIKE 'A%';


--7. 	
	SELECT * FROM ACTORS WHERE ACTOR_BIRTH_DATE LIKE '%-06-%';


--8. 	
	SELECT * FROM ACTORS 
	WHERE ACTOR_BIRTH_DATE NOT LIKE '%-06-%' AND ACTOR_DEAD_DATE IS NULL ;


--9. 	
	SELECT DIRECTOR_NAME, (YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) AS "EDAD" FROM DIRECTORS 
	WHERE (YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) <= 50 AND DIRECTOR_DEAD_DATE IS NULL;


--10. 
	SELECT ACTOR_NAME, (YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE)) AS "EDAD" FROM ACTORS 
	WHERE (YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE)) <= 50 AND ACTOR_DEAD_DATE IS NOT NULL;


--11. 
	SELECT DIRECTOR_NAME FROM DIRECTORS 
	WHERE (YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) <= 40 AND DIRECTOR_DEAD_DATE IS NULL;


--12. 	
	SELECT AVG((YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE))) AS "EDAD MEDIA" FROM DIRECTORS 
	WHERE DIRECTOR_DEAD_DATE IS NULL;


--13. 	
	SELECT AVG((YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE))) AS "EDAD MEDIA" FROM ACTORS 
	WHERE ACTOR_DEAD_DATE IS NOT NULL;


--14. 	
	SELECT MOVIE_NAME, st.STUDIO_NAME  FROM MOVIES m 
	INNER JOIN STUDIOS st ON m.STUDIO_ID = st.STUDIO_ID;


--15. 
	SELECT DISTINCT MEMBER_NAME FROM MEMBERS m 
	INNER JOIN MEMBERS_MOVIE_RENTAL mr ON mr.MEMBER_ID = m.MEMBER_ID 
	WHERE YEAR(mr.MEMBER_RENTAL_DATE) <= 2015 AND YEAR(mr.MEMBER_RENTAL_DATE) >= 2010;


--16. 
	SELECT NATIONALITY_NAME, COUNT(NATIONALITY_NAME) AS "PELIS" 
	FROM NATIONALITIES n INNER JOIN MOVIES m ON n.NATIONALITY_ID = m.NATIONALITY_ID 
	GROUP BY NATIONALITY_NAME;

	
--17. 
	SELECT  MOVIE_NAME FROM MOVIES m INNER JOIN GENRES g ON m.GENRE_ID = g.GENRE_ID 
	WHERE g.GENRE_NAME LIKE 'Documentary';


--18. 
	SELECT  * FROM MOVIES m INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
	WHERE YEAR(d.DIRECTOR_BIRTH_DATE) >= 1980 AND DIRECTOR_DEAD_DATE IS NULL;


--19.
	SELECT mb.MEMBER_NAME  FROM MOVIES m
	INNER JOIN MEMBERS_MOVIE_RENTAL mr ON m.MOVIE_ID = mr.MOVIE_ID
	INNER JOIN MEMBERS mb ON mr.MEMBER_ID = mb.MEMBER_ID
	INNER JOIN DIRECTORS d ON d.DIRECTOR_ID = m.DIRECTOR_ID
	WHERE mb.MEMBER_TOWN LIKE d.DIRECTOR_BIRTH_PLACE;


--20. 
	SELECT MOVIE_NAME, MOVIE_LAUNCH_DATE FROM MOVIES m 
	INNER JOIN STUDIOS s ON m.STUDIO_ID = S.STUDIO_ID WHERE s.STUDIO_ACTIVE = 0;


--21. 
	SELECT DISTINCT MOVIE_NAME, MEMBER_RENTAL_DATE FROM MOVIES m 
	INNER JOIN MEMBERS_MOVIE_RENTAL mr ON m.MOVIE_ID = MR.MOVIE_ID 
	ORDER BY MEMBER_RENTAL_DATE DESC LIMIT 10;


--22.
	SELECT DIRECTOR_NAME, COUNT(m.MOVIE_ID) FROM MOVIES m 
	INNER JOIN DIRECTORS d ON d.DIRECTOR_ID = m.DIRECTOR_ID  
	WHERE YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE) < 41 
	GROUP BY DIRECTOR_NAME;

--23.
 	SELECT d.DIRECTOR_NAME, AVG(m.MOVIE_DURATION) FROM MOVIES m 
 	INNER JOIN DIRECTORS d ON m.DIRECTOR_ID =  d.DIRECTOR_ID 
 	GROUP BY d.DIRECTOR_NAME;
 	
--24.
 	SELECT  m.MOVIE_NAME, m.MOVIE_DURATION FROM MOVIES m 
 	INNER JOIN MEMBERS_MOVIE_RENTAL mr ON m.MOVIE_ID = mr.MOVIE_ID 
 	WHERE DATEDIFF('2019-01-25',mr.MEMBER_RENTAL_DATE) <= 730
 	ORDER BY m.MOVIE_DURATION LIMIT 1 ;
  	
--25.
 	SELECT d.DIRECTOR_NAME, COUNT(MOVIE_NAME) AS "PELIS"  FROM MOVIES m 
 	INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID
 	WHERE YEAR(MOVIE_LAUNCH_DATE) >= 1960 
 	AND YEAR(MOVIE_LAUNCH_DATE) < 1990
 	AND MOVIE_NAME LIKE '%The%'
 	GROUP BY DIRECTOR_NAME;
 
 --26.
 	SELECT MOVIE_NAME, NATIONALITY_NAME, DIRECTOR_NAME FROM MOVIES m 
 	INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
 	INNER JOIN NATIONALITIES n ON m.NATIONALITY_ID = n.NATIONALITY_ID
 	ORDER BY MOVIE_NAME;
 
 --27.
 	SELECT MOVIE_NAME, ACTOR_NAME FROM MOVIES_ACTORS ma 
 	INNER JOIN MOVIES m ON ma.MOVIE_ID = m.MOVIE_ID
 	INNER JOIN ACTORS a ON ma.ACTOR_ID = a.ACTOR_ID
 	ORDER BY MOVIE_NAME;
 
 --28.
 	SELECT DIRECTOR_NAME, COUNT(DIRECTOR_NAME) FROM MOVIES m 
 	INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
 	INNER JOIN MEMBERS_MOVIE_RENTAL mr ON m.MOVIE_ID = mr.MOVIE_ID
 	GROUP BY d.DIRECTOR_NAME
 	ORDER BY COUNT(DIRECTOR_NAME) DESC LIMIT 1;
 
 --29.
 	SELECT STUDIO_NAME, SUM(AWARD_WIN) AS "PREMIOS" FROM MOVIES m 
 	INNER JOIN AWARDS a ON a.MOVIE_ID = m.MOVIE_ID
 	INNER JOIN STUDIOS s ON s.STUDIO_ID = m.STUDIO_ID
 	GROUP BY STUDIO_NAME;
 	
 --30.
 	SELECT ACTOR_NAME,SUM(AWARD_ALMOST_WIN) AS "NOMINACIONES" FROM MOVIES m 
 	INNER JOIN AWARDS a ON a.MOVIE_ID = m.MOVIE_ID
 	INNER JOIN MOVIES_ACTORS ma ON m.MOVIE_ID = ma.MOVIE_ID
 	INNER JOIN ACTORS ac ON ma.ACTOR_ID = ac.ACTOR_ID
 	GROUP BY ACTOR_NAME;
 
 --31.
 	SELECT COUNT(ACTOR_NAME), COUNT(DISTINCT DIRECTOR_NAME) FROM MOVIES m
 	INNER JOIN MOVIES_ACTORS ma ON m.MOVIE_ID = ma.MOVIE_ID
 	INNER JOIN ACTORS ac ON ma.ACTOR_ID = ac.ACTOR_ID
 	INNER JOIN STUDIOS s ON s.STUDIO_ID = m.STUDIO_ID
 	INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
 	WHERE STUDIO_ACTIVE = 0;
 
 --32
 	SELECT DISTINCT mb.MEMBER_NAME, mb.MEMBER_TOWN, mb.MEMBER_PHONE FROM MOVIES m 
 	INNER JOIN AWARDS a ON a.MOVIE_ID = m.MOVIE_ID
 	INNER JOIN MEMBERS_MOVIE_RENTAL mr ON m.MOVIE_ID = mr.MOVIE_ID
	INNER JOIN MEMBERS mb ON mr.MEMBER_ID = mb.MEMBER_ID
	WHERE a.AWARD_NOMINATION >150 AND AWARD_WIN < 50;
	
--33
	SELECT m.MOVIE_NAME, m.MOVIE_LAUNCH_DATE, d.DIRECTOR_NAME, d.DIRECTOR_DEAD_DATE FROM MOVIES m 
	INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID
	WHERE DIRECTOR_DEAD_DATE IS NOT NULL 
	AND m.MOVIE_LAUNCH_DATE > d.DIRECTOR_DEAD_DATE;

--34.
	UPDATE DIRECTORS d 
	SET DIRECTOR_DEAD_DATE = (SELECT DATEADD(YEAR,1,MOVIE_LAUNCH_DATE) FROM MOVIES 
		WHERE MOVIE_LAUNCH_DATE > d.DIRECTOR_DEAD_DATE) 
	WHERE d.DIRECTOR_DEAD_DATE IS NOT NULL;
 
